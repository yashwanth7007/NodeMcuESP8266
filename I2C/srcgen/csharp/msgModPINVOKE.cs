//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class msgModPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="SWIGRegisterExceptionCallbacks_msgMod")]
    public static extern void SWIGRegisterExceptionCallbacks_msgMod(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_msgMod")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_msgMod(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_msgMod(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_msgMod(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="SWIGRegisterStringCallback_msgMod")]
    public static extern void SWIGRegisterStringCallback_msgMod(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_msgMod(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static msgModPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_uint8_t_arr")]
  public static extern global::System.IntPtr new_uint8_t_arr(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_uint8_t_arr")]
  public static extern void delete_uint8_t_arr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_uint8_t_arr_getitem")]
  public static extern byte uint8_t_arr_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_uint8_t_arr_setitem")]
  public static extern void uint8_t_arr_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, byte jarg3);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgHdr_signature_set")]
  public static extern void MsgHdr_signature_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgHdr_signature_get")]
  public static extern ushort MsgHdr_signature_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_MsgHdr")]
  public static extern global::System.IntPtr new_MsgHdr();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_MsgHdr")]
  public static extern void delete_MsgHdr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_get")]
  public static extern global::System.IntPtr MsgPayload_i2c_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_MsgPayload")]
  public static extern global::System.IntPtr new_MsgPayload();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_MsgPayload")]
  public static extern void delete_MsgPayload(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_get")]
  public static extern global::System.IntPtr MsgPayload_i2c_tran_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_MsgPayload_i2c")]
  public static extern global::System.IntPtr new_MsgPayload_i2c();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_MsgPayload_i2c")]
  public static extern void delete_MsgPayload_i2c(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_get")]
  public static extern global::System.IntPtr MsgPayload_i2c_tran_v1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_MsgPayload_i2c_tran")]
  public static extern global::System.IntPtr new_MsgPayload_i2c_tran();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_MsgPayload_i2c_tran")]
  public static extern void delete_MsgPayload_i2c_tran(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_get")]
  public static extern global::System.IntPtr MsgPayload_i2c_tran_v1_req_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp_get")]
  public static extern global::System.IntPtr MsgPayload_i2c_tran_v1_resp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_MsgPayload_i2c_tran_v1")]
  public static extern global::System.IntPtr new_MsgPayload_i2c_tran_v1();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_MsgPayload_i2c_tran_v1")]
  public static extern void delete_MsgPayload_i2c_tran_v1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp_chipAddr_set")]
  public static extern void MsgPayload_i2c_tran_v1_resp_chipAddr_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp_chipAddr_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_resp_chipAddr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp___reserved0_set")]
  public static extern void MsgPayload_i2c_tran_v1_resp___reserved0_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp___reserved0_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_resp___reserved0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp_rdLen_set")]
  public static extern void MsgPayload_i2c_tran_v1_resp_rdLen_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp_rdLen_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_resp_rdLen_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp___reserved1_set")]
  public static extern void MsgPayload_i2c_tran_v1_resp___reserved1_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp___reserved1_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_resp___reserved1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp_rdBuff_set")]
  public static extern void MsgPayload_i2c_tran_v1_resp_rdBuff_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_resp_rdBuff_get")]
  public static extern global::System.IntPtr MsgPayload_i2c_tran_v1_resp_rdBuff_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_MsgPayload_i2c_tran_v1_resp")]
  public static extern global::System.IntPtr new_MsgPayload_i2c_tran_v1_resp();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_MsgPayload_i2c_tran_v1_resp")]
  public static extern void delete_MsgPayload_i2c_tran_v1_resp(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_chipAddr_set")]
  public static extern void MsgPayload_i2c_tran_v1_req_chipAddr_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_chipAddr_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_req_chipAddr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req___reserved0_set")]
  public static extern void MsgPayload_i2c_tran_v1_req___reserved0_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req___reserved0_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_req___reserved0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_rdLen_set")]
  public static extern void MsgPayload_i2c_tran_v1_req_rdLen_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_rdLen_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_req_rdLen_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_wrLen_set")]
  public static extern void MsgPayload_i2c_tran_v1_req_wrLen_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_wrLen_get")]
  public static extern ushort MsgPayload_i2c_tran_v1_req_wrLen_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_wrBuff_set")]
  public static extern void MsgPayload_i2c_tran_v1_req_wrBuff_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_MsgPayload_i2c_tran_v1_req_wrBuff_get")]
  public static extern global::System.IntPtr MsgPayload_i2c_tran_v1_req_wrBuff_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_MsgPayload_i2c_tran_v1_req")]
  public static extern global::System.IntPtr new_MsgPayload_i2c_tran_v1_req();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_MsgPayload_i2c_tran_v1_req")]
  public static extern void delete_MsgPayload_i2c_tran_v1_req(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_Msg_hdr_set")]
  public static extern void Msg_hdr_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_Msg_hdr_get")]
  public static extern global::System.IntPtr Msg_hdr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_Msg_payload_set")]
  public static extern void Msg_payload_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_Msg_payload_get")]
  public static extern global::System.IntPtr Msg_payload_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_new_Msg")]
  public static extern global::System.IntPtr new_Msg();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_delete_Msg")]
  public static extern void delete_Msg(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_getMsgSize")]
  public static extern int getMsgSize();

  [global::System.Runtime.InteropServices.DllImport("msgMod", EntryPoint="CSharp_typeCastMsgToUint8")]
  public static extern global::System.IntPtr typeCastMsgToUint8(global::System.Runtime.InteropServices.HandleRef jarg1);
}
